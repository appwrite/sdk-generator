name: Publish to Maven Central

# Run this workflow when a release is created
on:
  release:
    types: [released]

jobs:
  publish:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
        # Base64 decodes and pipes the GPG key content into the secret file
      - name: Prepare environment
        env:
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
          chmod +x ./gradlew

        # Builds the release artifacts of the library
      - name: Build Release Artifacts
        run: ./gradlew --info library:assembleRelease

        # Generates other artifacts (javadocJar is optional)
      - name: Generate Source jar
        run: ./gradlew javadocJar

        # Runs upload, and then closes & releases the repository
      - name: Publish Release Version to MavenCentral
        run: |
          if ${{ endswith(github.event.release.tag_name, '-SNAPSHOT') }}; then
            echo "Publising Snapshot Version ${{ github.event.release.tag_name}} to Snapshot repository"
            ./gradlew publishReleasePublicationToSonatypeRepository
          else
            echo "Publising Release Version ${{ github.event.release.tag_name}} to Staging repository"
            ./gradlew publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
          fi
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SDK_VERSION: ${{ github.event.release.tag_name }}
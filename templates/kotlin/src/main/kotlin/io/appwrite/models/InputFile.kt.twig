package {{ sdk.namespace | caseDot }}.models

import java.io.File
import java.net.URLConnection
import java.nio.file.Files
import java.nio.file.Paths

class InputFile private constructor() {

    lateinit var path: String
    lateinit var filename: String
    lateinit var mimeType: String
    lateinit var sourceType: String
    lateinit var data: Any

    companion object {
        /**
         * Create a new InputFile from a file
         *
         * @param file The file to create the InputFile from
         */
        @JvmStatic
        fun fromFile(file: File) = InputFile().apply {
            path = file.canonicalPath
            filename = file.name
            mimeType = Files.probeContentType(Paths.get(file.canonicalPath))
                ?: URLConnection.guessContentTypeFromName(filename)
                ?: ""
            sourceType = "file"
        }

        /**
         * Create a new InputFile from a file path
         *
         * @param path The path to the file to create the InputFile from
         */
        @JvmStatic
        fun fromPath(path: String): InputFile = fromFile(File(path)).apply {
            sourceType = "path"
        }

        /**
         * Create a new InputFile from a byte array
         *
         * @param bytes The byte array to create the InputFile from
         * @param filename The filename of the file
         * @param mimeType The mime type of the file
         */
        @JvmStatic
        fun fromBytes(bytes: ByteArray, filename: String = "", mimeType: String = "") = InputFile().apply {
            this.filename = filename
            this.mimeType = mimeType
            data = bytes
            sourceType = "bytes"
        }
    }
}
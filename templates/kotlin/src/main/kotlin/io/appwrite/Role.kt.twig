package {{ sdk.namespace | caseDot }}

/**
 * Helper class for role selectors
 */
object Role {
    const val any = "any"

    const val guests = "guests"

    @Deprecated("Use const val", ReplaceWith("any"))
    @JvmStatic
    fun any() = any

    /**
     * Single user with the [id] (and [status], if provided) is selected
     * 
     * @param id user ID to select
     * @param status user status to select
     */
    @JvmStatic
    @JvmOverloads
    fun user(id: String, status: String? = null) = "user:$id${status?.let { "/$it" } ?: ""}"

    /**
     * Multiple users (filtering by [status], if provided) are selected
     *
     * @param status user status to filter
     */
    @JvmStatic
    @JvmOverloads
    fun users(status: String? = null) = "users${status?.let { "/$it" } ?: ""}"

    @Deprecated("Use const val", ReplaceWith("guests"))
    @JvmStatic
    fun guests() = guests

    /**
     * Team with [id] (and [role], if provided) is selected
     *
     * @param id team ID to select
     * @param role (optional) role ID to select
     */
    @JvmStatic
    @JvmOverloads
    fun team(id: String, role: String? = null) = "team:$id${role?.let { "/$it" } ?: ""}"

    /**
     * Selects a member with [id]
     *
     * @param id member ID
     */
    @JvmStatic
    fun member(id: String) = "member:$id"
}
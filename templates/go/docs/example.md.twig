{%- set requireModelsPkg = false -%}
{%- set requireFilesPkg = false -%}
{%- if (method | returnType(spec, spec.title | caseLower)) starts with "models" -%}
		{%- set requireModelsPkg = true -%}
{%- endif -%}

package main

import (
    "fmt"
	"github.com/{{sdk.gitUserName}}/sdk-for-go/appwrite"
{% if requireFilesPkg or method.name | caseLower == "createexecution" %}
	"github.com/{{sdk.gitUserName}}/sdk-for-go/payload"
{% endif %}
)

func main() {
	client := appwrite.NewClient(
{% if method.auth|length > 0 %}
        appwrite.WithEndpoint("https://cloud.appwrite.io/v1"), // Your API Endpoint
{% for node in method.auth %}
{% for key,header in node|keys %}
        appwrite.With{{header}}("{{node[header]['x-{{ spec.title | caseLower }}']['demo']}}"), // {{node[header].description}}
{% endfor %}
{% endfor %}
    )

{% endif %}
    {{service.name}} := appwrite.New{{ service.name | caseUcfirst }}(client)
    response, error := {{service.name}}.{{ method.name | caseUcfirst }}(
{% for parameter in method.parameters.all %}
{% if parameter.required %}
        {{ parameter | paramExample }},
{% else %}
        {{ service.name | caseLower }}.With{{ method.name | caseUcfirst }}{{ parameter.name | caseUcfirst }}({{ parameter | paramExample }}),
{% endif %}
{% endfor %}
    )

    if error != nil {
        panic(error)
    }

    fmt.Println(response)
}

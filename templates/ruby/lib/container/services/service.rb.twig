#frozen_string_literal: true

module {{spec.title | caseUcfirst}}
    class {{ service.name | caseUcfirst }} < Service

        include Models
{% for method in service.methods %}
{{ method.description | rubyComment }}
        #
{% for parameter in method.parameters.all %}
        # @param [{{ parameter.type | typeName }}] {{ parameter.name | caseSnake | escapeKeyword }} {{ parameter.description }}
{% endfor %}
        #
        # @return [{{ method.responseModel | caseUcfirst }}]
        def {{ method.name | caseSnake }}({% for parameter in method.parameters.all %}{{ parameter.name | caseSnake | escapeKeyword }}:{% if not parameter.required %} nil{% endif %}{% if not loop.last %}, {% endif %}{% endfor %})
{% for parameter in method.parameters.all %}
{% if parameter.required %}
            if {{ parameter.name | caseSnake | escapeKeyword }}.nil?
                raise {{spec.title | caseUcfirst}}::Exception.new('Missing required parameter: "{{ parameter.name | caseCamel | escapeKeyword }}"')
            end

{% endif %}
{% endfor %}
            path = '{{ method.path }}'
{% for parameter in method.parameters.path %}
                .gsub('{{ '{' }}{{ parameter.name }}{{ '}' }}', {{ parameter.name | caseSnake | escapeKeyword }})
{% endfor %}

            params = {
{% for parameter in method.parameters.query | merge(method.parameters.body)  %}
                {{ parameter.name }}: {{ parameter.name | caseSnake | escapeKeyword }},
{% endfor %}
            }

            headers = {
{% for parameter in method.parameters.header %}
                "{{ parameter.name }}": {{ parameter.name | caseCamel | escapeKeyword }},
{% endfor %}
{% for key, header in method.headers %}
                "{{ key }}": '{{ header }}',
{% endfor %}
            }

            @client.call(
                method: '{{ method.method | caseUpper }}',
                path: path,
                params: params,
                headers: headers,
{% if method.responseModel and method.responseModel != 'any' %}
                response_type: {{method.responseModel | caseUcfirst}}
{% endif %}
            )
        end

{% endfor %}
    end 
end
part of {{ language.params.packageName }};
{% macro parameter(parameter) %}
{% if parameter.required %}required {{ parameter.type | typeName }}{% else %}{{ parameter.type | typeName }}?{% endif %} {{ parameter.name | caseCamel | escapeKeyword }}{% endmacro %}
{% macro method_parameters(parameters, consumes) %}
{% if parameters.all|length > 0 %}{{ '{' }}{% for parameter in parameters.all %}{{ _self.parameter(parameter) }}{% if not loop.last %}, {% endif %}{% endfor %}{% if 'multipart/form-data' in consumes %}, Function(UploadProgress)? onProgress{% endif %}{{ '}' }}{% endif %}
{% endmacro %}

{%if service.description %}
{{ service.description|dartComment}}
{% endif %}
class {{ service.name | caseUcfirst }} extends Service {
    {{ service.name | caseUcfirst }}(Client client): super(client);
{% for method in service.methods %}

     /// {{ method.title }}
{% if method.description %}
     ///
{{ method.description | dartComment }}
     ///
{% endif %}
    {% if method.type == 'location' %} Future<Uint8List> {% else %} {% if method.responseModel and method.responseModel != 'any' %}Future<models.{{method.responseModel | caseUcfirst | overrideIdentifier}}>{% else %}Future{% endif %}{% endif %} {{ method.name | caseCamel }}({{ _self.method_parameters(method.parameters, method.consumes) }}) async {
        final String path = '{{ method.path }}'{% for parameter in method.parameters.path %}.replaceAll('{{ '{' }}{{ parameter.name | caseCamel }}{{ '}' }}', {{ parameter.name | caseCamel | escapeKeyword }}){% endfor %};

{% if 'multipart/form-data' in method.consumes %}
{{ include('dart/base/requests/file.twig') }}
{% elseif method.type == 'location' %}
{{ include('dart/base/requests/location.twig') }}
{% else %}
{{ include('dart/base/requests/api.twig') }}
{% endif %}

    }
{% endfor %}
}
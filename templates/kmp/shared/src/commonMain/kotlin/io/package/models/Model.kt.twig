package {{ sdk.namespace | caseDot }}.models

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import io.appwrite.extensions.jsonCast

/**
 * {{ definition.description }}
 */
{% if definition.properties | length != 0 or definition.additionalProperties %}
@Serializable
data {% endif %}class {{ definition | modelType(spec) | raw }}(
    {%~ if definition.properties is defined %}
    {%~ for property in definition.properties %}
    /**
     * {{ property.description }}
     */
    @SerialName("{{ property.name | escapeKeyword | escapeDollarSign}}")
    {% if property.required -%} val
    {%- else -%} var
    {%- endif %} {{ property.name | escapeKeyword | removeDollarSign }}: {{ property | propertyType(spec) | raw }},

    {%~ endfor %}
    {%~ endif %}
    {%~ if definition.additionalProperties %}
    /**
     * Additional properties
     */
    @SerialName("data")
    val data: T
    {%~ endif %}
)

package {{ sdk.namespace | caseDot }}

@Suppress("NOTHING_TO_INLINE")
object Query {
    fun equal(attribute: String, value: Any) = make(attribute, "equal", value)

    fun notEqual(attribute: String, value: Any) = make(attribute, "notEqual", value)

    fun lessThan(attribute: String, value: Any) = make(attribute, "lessThan", value)

    fun lessThanEqual(attribute: String, value: Any) = make(attribute, "lessThanEqual", value)

    fun greaterThan(attribute: String, value: Any) = make(attribute, "greaterThan", value)

    fun greaterThanEqual(attribute: String, value: Any) = make(attribute, "greaterThanEqual", value)

    fun search(attribute: String, value: String) = make(attribute, "search", value)

    fun orderAsc(attribute: String) = "orderAsc(\"$attribute\")"

    fun orderDesc(attribute: String) = "orderDesc(\"$attribute\")"

    fun cursorBefore(documentId: String) = "cursorBefore(\"$documentId\")"

    fun cursorAfter(documentId: String) = "cursorAfter(\"$documentId\")"

    fun limit(limit: Int) = "limit($limit)"

    fun offset(offset: Int) = "offset($offset)"

    private inline fun make(attribute: String, method: String, value: Any): String = "${method}(\"$attribute\", [${
        (value as? List<*> ?: listOf(value))
            .filterNotNull()
            .joinToString(",", transform = this::stringify)
    }])"

    private inline fun stringify(value: Any): String = value.toString().let { if (value is String) "\"$it\"" else it }
}
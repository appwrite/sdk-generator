part of '../{{ language.params.packageName }}.dart';
{% macro parameter(parameter) %}{% if parameter.required %}required {% endif %}{{ parameter | typeName }}{% if not parameter.required or parameter.nullable %}?{% endif %} {{ parameter.name | caseCamel | overrideIdentifier }}{% endmacro %}
{% macro method_parameters(parameters, consumes, hasGenerics) %}
{% if parameters|length > 0 or hasGenerics %}{{ '{' }}{% for parameter in parameters %}{{ _self.parameter(parameter) }}{% if not loop.last %}, {% endif %}{% endfor %}{% if hasGenerics %}{% if parameters|length > 0 %}, {% endif %}T Function(Map<String, dynamic>)? fromJson{% endif %}{% if 'multipart/form-data' in consumes %}{% if parameters|length > 0 or hasGenerics %}, {% endif %}Function(UploadProgress)? onProgress{% endif %}{{ '}' }}{% endif %}
{% endmacro %}
{% macro service_params(parameters, hasGenerics) %}
{% if parameters|length > 0 or hasGenerics %}{{ ', {' }}{% for parameter in parameters %}{% if parameter.required %}required {% endif %}this.{{ parameter.name | caseCamel | overrideIdentifier }}{% if not loop.last %}, {% endif %}{% endfor %}{% if hasGenerics %}{% if parameters|length > 0 %}, {% endif %}this.fromJson{% endif %}{{ '}' }}{% endif %}
{% endmacro %}
{% macro generic_return_type(method) %}{% if method.responseModel and method.responseModel != 'any' %}{% set modelName = method.responseModel | caseUcfirst | overrideIdentifier %}{% if modelName == 'Document' or modelName ends with 'List' %}Future<models.{{modelName}}<T>>{% else %}Future<models.{{modelName}}>{% endif %}{% else %}Future{% endif %}{% endmacro %}

{%if service.description %}
{{- service.description|dartComment | split('    ///') | join('///')}}
{% endif %}
class {{ service.name | caseUcfirst }} extends Service {
    {{ service.name | caseUcfirst }}(super.client);
{% for method in service.methods %}
{% set isGenericMethod = method.responseModel and (method.responseModel | caseUcfirst == 'Document' or method.responseModel | caseUcfirst ends with 'List') %}

{%~ if method.description %}
{{ method.description | dartComment }}
{% endif %}
    {% if method.type == 'location' %}Future<Uint8List>{% elseif isGenericMethod %}{{ _self.generic_return_type(method) }}{% else %}{% if method.responseModel and method.responseModel != 'any' %}Future<models.{{method.responseModel | caseUcfirst | overrideIdentifier}}>{% else %}Future{% endif %}{% endif %} {{ method.name | caseCamel | overrideIdentifier }}{% if isGenericMethod %}<T>{% endif %}({{ _self.method_parameters(method.parameters.all, method.consumes, isGenericMethod) }}) async {
        final String apiPath = '{{ method.path }}'{% for parameter in method.parameters.path %}.replaceAll('{{ '{' }}{{ parameter.name | caseCamel }}{{ '}' }}', {{ parameter.name | caseCamel | overrideIdentifier }}{% if parameter.enumValues | length > 0  %}.value{% endif %}){% endfor %};

{% if 'multipart/form-data' in method.consumes %}
{{ include('dart/base/requests/file.twig') }}
{% elseif method.type == 'location' %}
{{ include('dart/base/requests/location.twig') }}
{% elseif method.type == 'webAuth' %}
{{ include('dart/base/requests/oauth.twig') }}
{% else %}
{{ include('dart/base/requests/api.twig') }}
{% endif %}
    }
{% endfor %}
}